// <auto-generated />
using CourseRegistration.Data.SqlRepo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseRegistration.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210831002051_3")]
    partial class _3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("CourseRegistration.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("C_Name")
                        .HasColumnType("longtext");

                    b.Property<int>("C_Number")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1001,
                            C_Name = "Math",
                            C_Number = 1,
                            Description = "Geometry"
                        },
                        new
                        {
                            CourseId = 1002,
                            C_Name = "Science",
                            C_Number = 2,
                            Description = "Biology"
                        },
                        new
                        {
                            CourseId = 1003,
                            C_Name = "Computer Science",
                            C_Number = 3,
                            Description = "Web Development"
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.CourseStudents", b =>
                {
                    b.Property<int>("CS_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("CS_Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseStudents");
                });

            modelBuilder.Entity("CourseRegistration.Models.Instructor", b =>
                {
                    b.Property<int>("I_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.HasKey("I_Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            I_Id = 101,
                            CourseId = 0,
                            EmailAddress = "markjohnson@gmail.com",
                            FirstName = "Mark",
                            LastName = "Johnson"
                        },
                        new
                        {
                            I_Id = 102,
                            CourseId = 0,
                            EmailAddress = "lucysmith@gmail.com",
                            FirstName = "Lucy",
                            LastName = "Smith"
                        },
                        new
                        {
                            I_Id = 103,
                            CourseId = 0,
                            EmailAddress = "trecybrown@gmail.com",
                            FirstName = "Trecy",
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            EmailAddress = "danialpara@gmail.com",
                            FirstName = "Danial",
                            LastName = "Para",
                            PhoneNumber = "5879207077"
                        },
                        new
                        {
                            StudentId = 2,
                            EmailAddress = "parkerjames@gmail.com",
                            FirstName = "Parker",
                            LastName = "James",
                            PhoneNumber = "7809304545"
                        },
                        new
                        {
                            StudentId = 3,
                            EmailAddress = "robinsmith@gmail.com",
                            FirstName = "Robin",
                            LastName = "Smith",
                            PhoneNumber = "6785674564"
                        },
                        new
                        {
                            StudentId = 4,
                            EmailAddress = "suratandan@gmail.com",
                            FirstName = "Sura",
                            LastName = "Tandan",
                            PhoneNumber = "2785674504"
                        },
                        new
                        {
                            StudentId = 5,
                            EmailAddress = "samueljohnson@gmail.com",
                            FirstName = "Samuel",
                            LastName = "Johnson",
                            PhoneNumber = "6785644560"
                        },
                        new
                        {
                            StudentId = 6,
                            EmailAddress = "tommylee@gmail.com",
                            FirstName = "Tommy",
                            LastName = "Lee",
                            PhoneNumber = "4785684564"
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.CourseStudents", b =>
                {
                    b.HasOne("CourseRegistration.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseRegistration.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseRegistration.Models.Instructor", b =>
                {
                    b.HasOne("CourseRegistration.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
